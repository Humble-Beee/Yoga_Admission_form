{"version":3,"sources":["useForm.js","validateInfo.js","FormSignup.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["useForm","callback","validate","useState","username","email","phone","password","password2","age","time","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleSubmit","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","useEffect","Object","keys","length","handleChange","target","name","value","validateInfo","trim","test","FormSignup","submitForm","className","onSubmit","htmlFor","id","type","placeholder","onChange","autoComplete","required","selected","FormSuccess","src","width","height","alt","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb7ab9fa.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nconst useForm =(callback,validate)=>{\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phone: '',\r\n        password: '',\r\n        password2: '',\r\n        age: '',\r\n        time: ''\r\n    });\r\n    const [errors,setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const handleChange = e => {\r\n        const {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        });\r\n    };\r\n\r\n   const handleSubmit = async (e) => {\r\n       e.preventDefault();\r\n\r\n       setErrors(validate(values));\r\n       setIsSubmitting(true);\r\n      \r\n       const {username,email,phone,password,password2,age,time} = values;\r\n\r\n      const res = await fetch(\"https://yoga-d49d0-default-rtdb.firebaseio.com/userdata.json\",{\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body:JSON.stringify({\r\n              username,\r\n              email,\r\n              phone,\r\n              password,\r\n              password2,\r\n              age,\r\n              time,\r\n          })\r\n      });\r\n      \r\n\r\n     \r\n   }\r\n   \r\n\r\n   useEffect(()=>{\r\n       if(Object.keys(errors).length === 0 && isSubmitting){\r\n           \r\n           callback()\r\n       }\r\n   },[errors])\r\n    return {handleChange,values,handleSubmit,errors };\r\n};\r\n\r\nexport default useForm;","export default function validateInfo(values) {\r\n    let errors = {};\r\n\r\n    if(!values.username.trim()) {\r\n        errors.username = 'Username required';\r\n    }\r\n    \r\n    if(!values.email) {\r\n        errors.email = 'email required';\r\n    }else if(!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(values.email)){\r\n        errors.email = 'Email address id invalid';\r\n    }\r\n    if(!values.phone){\r\n        errors.phone = 'phone number required'\r\n    }else if(values.phone.length<10 || values.phone.length>10){\r\n         errors.phone = 'phone number must have size 10!'\r\n    }\r\n    if(!values.age){\r\n        errors.age = 'Age required';\r\n    }else if(values.age<18 || values.age>65){\r\n        errors.age = 'Age should be between 18 and 65 inclusive'\r\n    }\r\n\r\n    if(!values.password) {\r\n        errors.password = 'password is required';\r\n    }else if(values.password.length < 5){\r\n        errors.password = 'Password needs to be 5 character or more';\r\n    }\r\n\r\n    if(!values.password2){\r\n        errors.password = 'password is required';\r\n    }else if(values.password!==values.password2){\r\n        errors.password = 'password do not match';\r\n    }\r\n    return errors;\r\n}","import React from 'react'\r\nimport useForm from './useForm'\r\nimport validate from './validateInfo'\r\nimport './Form.css'\r\n\r\nconst FormSignup = ({submitForm}) => {\r\n    const {handleChange, values,handleSubmit,errors } = useForm(submitForm,validate);\r\n\r\n    return (\r\n        <div className='form-content-right'>\r\n         <form className='form' onSubmit={handleSubmit}>\r\n           <h1>Ragister</h1>\r\n           <div className='form-inputs'>\r\n            <label htmlFor='username'\r\n            className='form-label'>\r\n            Username\r\n            </label>\r\n            <input\r\n            id='username'\r\n            type='text'\r\n            name='username'\r\n            className='form-input'\r\n            placeholder='Enter your username'\r\n            value={values.username}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            required\r\n            />\r\n            {errors.username && <p>{errors.username}</p>}\r\n           </div>\r\n        \r\n           <div className='form-inputs'>\r\n            <label htmlFor='email'\r\n            className='form-label'>\r\n            Email\r\n            </label>\r\n            <input\r\n            id='email'\r\n            type='email'\r\n            name='email'\r\n            className='form-input'\r\n            placeholder='Enter your email'\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            required\r\n            />\r\n            {errors.email && <p>{errors.email}</p>}\r\n           </div>\r\n\r\n           <div className='form-inputs'>\r\n            <label htmlFor='phone'\r\n            className='form-label'>\r\n            Phone Number\r\n            </label>\r\n            <input\r\n            id='phone'\r\n            type='number'\r\n            name='phone'\r\n            className='form-input'\r\n            placeholder='Enter your phone number'\r\n            value={values.phone}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            required\r\n            />\r\n            {errors.phone && <p>{errors.phone}</p>}\r\n           </div>\r\n\r\n\r\n           <div className='form-inputs'>\r\n            <label htmlFor='password'\r\n            className='form-label'>\r\n            Password\r\n            </label>\r\n            <input\r\n            id='password'\r\n            type='password'\r\n            name='password'\r\n            className='form-input'\r\n            placeholder='Enter your password'\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            required\r\n            />\r\n            {errors.password && <p>{errors.password}</p>}\r\n           </div>\r\n\r\n           <div className='form-inputs'>\r\n            <label htmlFor='password2'\r\n            className='form-label'>\r\n            Conform Password\r\n            </label>\r\n            <input\r\n            id='password2'\r\n            type='password'\r\n            name='password2'\r\n            className='form-input'\r\n            placeholder='Enter your password'\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            required\r\n            />\r\n            {errors.password2 && <p>{errors.password2}</p>}\r\n           </div>\r\n\r\n           <div className='form-inputs'>\r\n            <label htmlFor='age'\r\n            className='form-label'>\r\n            Age\r\n            </label>\r\n            <input\r\n            id='age'\r\n            type='number'\r\n            name='age'\r\n            className='form-input'\r\n            placeholder='Enter your age'\r\n            value={values.age}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            required\r\n            />\r\n            {errors.age && <p>{errors.age}</p>}\r\n           </div>\r\n           \r\n           <div className='form-inputs' >\r\n            <label htmlFor='time'\r\n            className='form-label'>\r\n            Class Schedule\r\n            </label>\r\n              <select className='select_container'>\r\n              <option selected value=\"6-7 AM\">6-7 AM</option>\r\n              <option value=\"7-8 AM\">7-8 AM</option>\r\n              <option value=\"8-9 AM\">8-9 AM</option>\r\n              <option value=\"5-6 PM\">5-6 PM</option>\r\n\r\n            </select>\r\n           \r\n           </div>\r\n           <button className='form-input-btn'\r\n           type='submit'>\r\n           Pay Rs.500\r\n           </button>\r\n           \r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormSignup;\r\n","  \r\nimport React from 'react';\r\nimport './Form.css';\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className='form-content-right'>\r\n     <div className='form-success'>We have received your request!</div>\r\n      \r\n      <img src='img/img-1.jpg.jpg' width=\"400\" \r\n     height=\"500\" alt='success-image' className='form-img-2' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;","import React, {useState} from 'react';\r\nimport FormSignup from './FormSignup';\r\nimport FormSuccess from './FormSuccess';\r\nimport './Form.css'\r\nconst Form = () => {\r\n    const [isSubmitted,setIsSubmitted] = useState(false)\r\n    function submitForm(){\r\n        setIsSubmitted(true);\r\n    }\r\n    return (\r\n       <>\r\n      \r\n      <div className='form-container'>\r\n        <span className='close-btn'>×</span>\r\n        <div className='form-content-left'>\r\n          <img className='form-img' src='img/img-3.svg.jpg' width=\"400\" \r\n     height=\"500\" alt='spaceship' />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormSignup submitForm={submitForm} />\r\n        ) : (\r\n          <FormSuccess />\r\n        )}\r\n      </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\nimport './App.css';\nimport Form from './Form';\nfunction App() {\n  return (\n  <div>\n   <div className=\"heading\"><h1 width=\"200 px\">The Morning Rise</h1></div>\n  <Form/>\n  </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}